# This is an auto-generated Django model module.
# You'll have to do the following manually to clean this up:
#   * Rearrange models' order
#   * Make sure each model has one field with primary_key=True
#   * Make sure each ForeignKey has `on_delete` set to the desired behavior.
#   * Remove `managed = False` lines if you wish to allow Django to create, modify, and delete the table
# Feel free to rename the models, but don't rename db_table values or field names.
from __future__ import unicode_literals

from django.db import models


class CzCodesetItem(models.Model):
    cz_codeset_id = models.FloatField(blank=True, null=True)
    cz_codeset = models.CharField(max_length=36, blank=True, null=True)
    cz_codeset_division_id = models.FloatField(blank=True, null=True)
    year = models.FloatField(blank=True, null=True)
    district = models.CharField(max_length=6, blank=True, null=True)

    class Meta:
        managed = False
        db_table = 'cz_codeset_item'


class District(models.Model):
    code = models.CharField(primary_key=True, max_length=6)
    name = models.CharField(max_length=96, blank=True, null=True)

    class Meta:
        managed = False
        db_table = 'district'


class GpBidCfmNew(models.Model):
    id = models.CharField(primary_key=True, max_length=32)
    cgxh = models.CharField(max_length=13)
    nd = models.CharField(max_length=4)
    ysxh = models.CharField(max_length=32)
    dw_dm = models.CharField(max_length=20)
    dw_mc = models.CharField(max_length=100)
    zgbm_dm = models.CharField(max_length=6)
    zgbm_mc = models.CharField(max_length=80)
    cgml_dm = models.CharField(max_length=20, blank=True, null=True)
    cgml_mc = models.CharField(max_length=80, blank=True, null=True)
    parent_menu = models.CharField(max_length=256, blank=True, null=True)
    apply_year = models.CharField(max_length=8, blank=True, null=True)
    km_dm = models.CharField(max_length=10, blank=True, null=True)
    km_mc = models.CharField(max_length=80, blank=True, null=True)
    xmbh = models.CharField(max_length=20, blank=True, null=True)
    xmmc = models.CharField(max_length=200, blank=True, null=True)
    cgnr = models.CharField(max_length=255, blank=True, null=True)
    jscs = models.CharField(max_length=255, blank=True, null=True)
    jldw = models.CharField(max_length=50, blank=True, null=True)
    dj = models.DecimalField(max_digits=16, decimal_places=6)
    sl = models.DecimalField(max_digits=16, decimal_places=2)
    je1 = models.DecimalField(max_digits=20, decimal_places=6)
    je2 = models.DecimalField(max_digits=20, decimal_places=6)
    je3 = models.DecimalField(max_digits=20, decimal_places=6)
    je4 = models.DecimalField(max_digits=20, decimal_places=6)
    je5 = models.DecimalField(max_digits=20, decimal_places=6)
    je6 = models.DecimalField(max_digits=20, decimal_places=6)
    je7 = models.DecimalField(max_digits=20, decimal_places=6)
    je8 = models.DecimalField(max_digits=20, decimal_places=6)
    je9 = models.DecimalField(max_digits=20, decimal_places=6, blank=True, null=True)
    cglx_dm = models.CharField(max_length=2)
    cgfs_dm = models.CharField(max_length=2, blank=True, null=True)
    fkfs_dm = models.CharField(max_length=2, blank=True, null=True)
    sssj = models.DateField(blank=True, null=True)
    dw_lxr = models.CharField(max_length=20, blank=True, null=True)
    dw_dhhm = models.CharField(max_length=32, blank=True, null=True)
    dw_rq = models.DateField(blank=True, null=True)
    zg_lxr = models.CharField(max_length=20, blank=True, null=True)
    zg_dhhm = models.CharField(max_length=32, blank=True, null=True)
    kb_yj = models.CharField(max_length=4000, blank=True, null=True)
    qrswh = models.CharField(max_length=40, blank=True, null=True)
    ffrq = models.DateField(blank=True, null=True)
    ffdxlb = models.CharField(max_length=100, blank=True, null=True)
    ffdxmc = models.CharField(max_length=4000, blank=True, null=True)
    fwbm = models.CharField(max_length=100, blank=True, null=True)
    sys_flag = models.CharField(max_length=10, blank=True, null=True)
    is_unite = models.CharField(max_length=1, blank=True, null=True)
    rlt_id = models.CharField(max_length=32, blank=True, null=True)
    import_time = models.DateField(blank=True, null=True)
    consign_id = models.CharField(max_length=32, blank=True, null=True)
    spare_money = models.DecimalField(max_digits=16, decimal_places=6)
    total_money = models.DecimalField(max_digits=16, decimal_places=6)
    edit_time = models.DateField(blank=True, null=True)
    spare_num = models.IntegerField(blank=True, null=True)
    bid_fail_count = models.IntegerField(blank=True, null=True)
    hdl_id = models.BigIntegerField(blank=True, null=True)
    hdl_name = models.CharField(max_length=120, blank=True, null=True)
    exchange_flag = models.CharField(max_length=10, blank=True, null=True)
    special_type_name = models.CharField(max_length=128, blank=True, null=True)
    special_type_code = models.CharField(max_length=10, blank=True, null=True)
    is_need_formal = models.CharField(max_length=2, blank=True, null=True)
    is_emer = models.CharField(max_length=1, blank=True, null=True)
    babz = models.CharField(max_length=1, blank=True, null=True)
    jkflag = models.CharField(max_length=1, blank=True, null=True)
    jk_ly = models.CharField(max_length=700, blank=True, null=True)
    fltk = models.CharField(max_length=600, blank=True, null=True)
    fgkzb_ly = models.CharField(max_length=600, blank=True, null=True)
    temp = models.CharField(max_length=1, blank=True, null=True)
    is_cancel = models.CharField(max_length=1, blank=True, null=True)
    s_m = models.DecimalField(max_digits=16, decimal_places=6, blank=True, null=True)
    s_n = models.IntegerField(blank=True, null=True)

    class Meta:
        managed = False
        db_table = 'gp_bid_cfm_new'


class I2OQrs(models.Model):
    mesg_id = models.FloatField(primary_key=True)
    qrs = models.CharField(max_length=64)
    spare_money = models.DecimalField(max_digits=20, decimal_places=6, blank=True, null=True)
    spare_num = models.IntegerField(blank=True, null=True)
    year = models.IntegerField(blank=True, null=True)
    total_money = models.DecimalField(max_digits=20, decimal_places=6, blank=True, null=True)
    total_num = models.IntegerField(blank=True, null=True)
    migrate = models.IntegerField(blank=True, null=True)
    carryover = models.NullBooleanField()

    class Meta:
        managed = False
        db_table = 'i2o_qrs'
        unique_together = (('mesg_id', 'qrs'),)


class Qrscancel(models.Model):
    qrs = models.CharField(primary_key=True, max_length=64)

    class Meta:
        managed = False
        db_table = 'qrscancel'


class Qrsclue(models.Model):
    id = models.BigIntegerField(primary_key=True)
    tablename = models.CharField(max_length=36, blank=True, null=True)
    mesg_id = models.BigIntegerField(blank=True, null=True)
    uuid = models.BigIntegerField(blank=True, null=True)
    cgdw = models.CharField(max_length=64, blank=True, null=True)
    qrs = models.CharField(max_length=64, blank=True, null=True)
    hth = models.CharField(max_length=80, blank=True, null=True)

    class Meta:
        managed = False
        db_table = 'qrsclue'


class Qrswh(models.Model):
    qrswh = models.CharField(primary_key=True, max_length=36)

    class Meta:
        managed = False
        db_table = 'qrswh'


class RecordList(models.Model):
    recordsync_id = models.CharField(primary_key=True, max_length=20)
    record_id = models.CharField(max_length=20, blank=True, null=True)
    time_submit = models.CharField(max_length=20, blank=True, null=True)
    contractno = models.CharField(max_length=36, blank=True, null=True)
    rec_flag = models.NullBooleanField()
    trade_type = models.CharField(max_length=36, blank=True, null=True)
    bank = models.CharField(max_length=128, blank=True, null=True)
    paymentdate = models.CharField(max_length=10, blank=True, null=True)
    auditdate = models.CharField(max_length=20, blank=True, null=True)

    class Meta:
        managed = False
        db_table = 'record_list'


class RecordlistRenew(models.Model):
    record_id = models.CharField(max_length=255, blank=True, null=True)
    create_time = models.DateField(blank=True, null=True)
    renew_flag = models.FloatField(blank=True, null=True)

    class Meta:
        managed = False
        db_table = 'recordlist_renew'


class TMesgRoutExchI2O(models.Model):
    mesg_id = models.FloatField(primary_key=True)
    mesg_type = models.CharField(max_length=255)
    mesg_code = models.CharField(max_length=255, blank=True, null=True)
    mesg_incode = models.CharField(max_length=255, blank=True, null=True)
    ent_code = models.CharField(max_length=255, blank=True, null=True)
    ent_name = models.CharField(max_length=255, blank=True, null=True)
    vertify_code = models.CharField(max_length=255, blank=True, null=True)
    mesg_data = models.BinaryField(blank=True, null=True)
    segment_status = models.FloatField(blank=True, null=True)
    mesg_status = models.CharField(max_length=1)
    update_time = models.DateField(blank=True, null=True)
    operate_time = models.DateField(blank=True, null=True)
    zcy_fetched = models.NullBooleanField()
    zcy_fetched_at = models.DateField(blank=True, null=True)
    zcy_id = models.BigIntegerField(blank=True, null=True)
    zcy_result = models.CharField(max_length=4000, blank=True, null=True)
    zcy_errorcode = models.CharField(max_length=32, blank=True, null=True)
    ff = models.NullBooleanField()
    district_code = models.CharField(max_length=255, blank=True, null=True)

    class Meta:
        managed = False
        db_table = 't_mesg_rout_exch_i2o'


class TMesgRoutExchI2OBuf(models.Model):
    mesg_id = models.FloatField(primary_key=True)
    mesg_type = models.CharField(max_length=255)
    mesg_code = models.CharField(max_length=255, blank=True, null=True)
    mesg_incode = models.CharField(max_length=255, blank=True, null=True)
    ent_code = models.CharField(max_length=255, blank=True, null=True)
    ent_name = models.CharField(max_length=255, blank=True, null=True)
    vertify_code = models.CharField(max_length=255, blank=True, null=True)
    mesg_data = models.BinaryField(blank=True, null=True)
    segment_status = models.FloatField(blank=True, null=True)
    mesg_status = models.CharField(max_length=1)
    update_time = models.DateField(blank=True, null=True)
    zcy_fetched = models.NullBooleanField()
    zcy_fetched_at = models.DateField(blank=True, null=True)
    zcy_id = models.BigIntegerField(blank=True, null=True)
    zcy_result = models.CharField(max_length=512, blank=True, null=True)
    zcy_errorcode = models.CharField(max_length=32, blank=True, null=True)
    road = models.NullBooleanField()
    operate_time = models.DateField(blank=True, null=True)
    district_code = models.CharField(max_length=255, blank=True, null=True)
    clued = models.NullBooleanField()
    uuid = models.BigIntegerField(blank=True, null=True)

    class Meta:
        managed = False
        db_table = 't_mesg_rout_exch_i2o_buf'


class TMesgRoutExchI2OSxBuf(models.Model):
    mesg_id = models.FloatField()
    district_code = models.CharField(max_length=55)
    mesg_type = models.CharField(max_length=255)
    mesg_code = models.CharField(max_length=255, blank=True, null=True)
    mesg_incode = models.CharField(max_length=255, blank=True, null=True)
    ent_code = models.CharField(max_length=255, blank=True, null=True)
    ent_name = models.CharField(max_length=255, blank=True, null=True)
    vertify_code = models.CharField(max_length=255, blank=True, null=True)
    mesg_data = models.BinaryField(blank=True, null=True)
    segment_status = models.FloatField(blank=True, null=True)
    mesg_status = models.CharField(max_length=1)
    update_time = models.DateField(blank=True, null=True)
    operate_time = models.DateField(blank=True, null=True)
    uuid = models.FloatField(primary_key=True)
    sync_time = models.DateField(blank=True, null=True)
    zcy_fetched = models.NullBooleanField()
    zcy_fetched_at = models.DateField(blank=True, null=True)
    zcy_id = models.BigIntegerField(blank=True, null=True)
    zcy_result = models.CharField(max_length=512, blank=True, null=True)
    zcy_errorcode = models.CharField(max_length=32, blank=True, null=True)
    clued = models.NullBooleanField()

    class Meta:
        managed = False
        db_table = 't_mesg_rout_exch_i2o_sx_buf'
        unique_together = (('district_code', 'mesg_id'),)


class TMesgRoutExchO2I(models.Model):
    mesg_id = models.CharField(primary_key=True, max_length=15)
    mesg_type = models.CharField(max_length=255)
    mesg_code = models.CharField(max_length=255, blank=True, null=True)
    mesg_incode = models.CharField(max_length=255, blank=True, null=True)
    ent_code = models.CharField(max_length=255, blank=True, null=True)
    ent_name = models.CharField(max_length=255, blank=True, null=True)
    vertify_code = models.CharField(max_length=255, blank=True, null=True)
    mesg_data = models.BinaryField(blank=True, null=True)
    segment_status = models.FloatField(blank=True, null=True)
    mesg_status = models.CharField(max_length=1)
    update_time = models.DateField(blank=True, null=True)
    operate_time = models.DateField(blank=True, null=True)
    district_code = models.CharField(max_length=255, blank=True, null=True)
    clued = models.NullBooleanField()
    uuid = models.BigIntegerField(blank=True, null=True)

    class Meta:
        managed = False
        db_table = 't_mesg_rout_exch_o2i'


class TMesgRoutExchO2ISx(models.Model):
    mesg_id = models.FloatField(primary_key=True)
    mesg_type = models.CharField(max_length=255)
    mesg_code = models.CharField(max_length=255, blank=True, null=True)
    mesg_incode = models.CharField(max_length=255, blank=True, null=True)
    ent_code = models.CharField(max_length=255, blank=True, null=True)
    ent_name = models.CharField(max_length=255, blank=True, null=True)
    vertify_code = models.CharField(max_length=255)
    segment_status = models.FloatField(blank=True, null=True)
    mesg_status = models.CharField(max_length=1)
    update_time = models.DateField()
    operate_time = models.DateField(blank=True, null=True)
    district_code = models.CharField(max_length=255)
    sync_time = models.DateField(blank=True, null=True)
    mesg_data = models.BinaryField(blank=True, null=True)

    class Meta:
        managed = False
        db_table = 't_mesg_rout_exch_o2i_sx'


class TmpCencus(models.Model):
    district_code = models.CharField(max_length=6)
    district_name = models.CharField(max_length=96, blank=True, null=True)
    begin_date = models.DateField(blank=True, null=True)
    end_date = models.DateField(blank=True, null=True)
    plan_add = models.FloatField(blank=True, null=True)
    plan_revoke = models.FloatField(blank=True, null=True)
    record_get = models.FloatField(blank=True, null=True)
    record_approved = models.FloatField(blank=True, null=True)
    record_prohibited = models.FloatField(blank=True, null=True)
    payment = models.FloatField(blank=True, null=True)

    class Meta:
        managed = False
        db_table = 'tmp_cencus'


class UnimasDc350BDjcfb1(models.Model):
    seqno = models.IntegerField(primary_key=True)
    dbname = models.CharField(max_length=255)
    tblname = models.CharField(max_length=255)
    pks = models.CharField(max_length=4000, blank=True, null=True)
    oldpks = models.CharField(max_length=4000, blank=True, null=True)
    mark = models.BooleanField()
    act = models.CharField(max_length=2)
    act_time = models.DateField(blank=True, null=True)
    deal_time = models.DateField(blank=True, null=True)
    status = models.IntegerField(blank=True, null=True)
    targets = models.CharField(max_length=255, blank=True, null=True)
    brenew = models.NullBooleanField()
    maxpks = models.TextField(blank=True, null=True)

    class Meta:
        managed = False
        db_table = 'unimas_dc350b_djcfb_1'


class UnimasDc350BDjcfb3(models.Model):
    seqno = models.IntegerField(primary_key=True)
    dbname = models.CharField(max_length=255)
    tblname = models.CharField(max_length=255)
    pks = models.CharField(max_length=4000, blank=True, null=True)
    oldpks = models.CharField(max_length=4000, blank=True, null=True)
    mark = models.BooleanField()
    act = models.CharField(max_length=2)
    act_time = models.DateField(blank=True, null=True)
    deal_time = models.DateField(blank=True, null=True)
    status = models.IntegerField(blank=True, null=True)
    targets = models.CharField(max_length=255, blank=True, null=True)
    brenew = models.NullBooleanField()
    maxpks = models.TextField(blank=True, null=True)

    class Meta:
        managed = False
        db_table = 'unimas_dc350b_djcfb_3'


class UnimasDc350BDjcfb60(models.Model):
    seqno = models.IntegerField(primary_key=True)
    dbname = models.CharField(max_length=255)
    tblname = models.CharField(max_length=255)
    pks = models.CharField(max_length=4000, blank=True, null=True)
    oldpks = models.CharField(max_length=4000, blank=True, null=True)
    mark = models.BooleanField()
    act = models.CharField(max_length=2)
    act_time = models.DateField(blank=True, null=True)
    deal_time = models.DateField(blank=True, null=True)
    status = models.IntegerField(blank=True, null=True)
    targets = models.CharField(max_length=255, blank=True, null=True)
    brenew = models.NullBooleanField()
    maxpks = models.TextField(blank=True, null=True)

    class Meta:
        managed = False
        db_table = 'unimas_dc350b_djcfb_60'


class UnimasDc350BDjcfb63(models.Model):
    seqno = models.IntegerField(primary_key=True)
    dbname = models.CharField(max_length=255)
    tblname = models.CharField(max_length=255)
    pks = models.CharField(max_length=4000, blank=True, null=True)
    oldpks = models.CharField(max_length=4000, blank=True, null=True)
    mark = models.BooleanField()
    act = models.CharField(max_length=2)
    act_time = models.DateField(blank=True, null=True)
    deal_time = models.DateField(blank=True, null=True)
    status = models.IntegerField(blank=True, null=True)
    targets = models.CharField(max_length=255, blank=True, null=True)
    brenew = models.NullBooleanField()
    maxpks = models.TextField(blank=True, null=True)

    class Meta:
        managed = False
        db_table = 'unimas_dc350b_djcfb_63'


class Workday(models.Model):
    id = models.BigIntegerField(primary_key=True)
    code = models.CharField(max_length=255, blank=True, null=True)
    name = models.CharField(max_length=255, blank=True, null=True)
    year = models.BigIntegerField(blank=True, null=True)
    month = models.BigIntegerField(blank=True, null=True)
    day = models.BigIntegerField(blank=True, null=True)
    weekday = models.BigIntegerField(blank=True, null=True)
    daytype = models.BigIntegerField(blank=True, null=True)

    class Meta:
        managed = False
        db_table = 'workday'
